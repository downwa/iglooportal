#!/bin/bash
# PURPOSE: Produce a table of bytes used, user since the checkout time in the last 24 hours
# NOTE: Also records a detailed usage by MAC address for each hour in the last 24 hours, in USEHR files
# NOTE: Uploads results for each user to $UPDATE site

IG="/var/lib/iglooportal"
USAGE="$IG/usage.csv"
FWPASS="$IG/fwpass.txt"
SESSIONS="$IG/sessions"
USEHR=$(date +"$IG/usehr-%H.csv")
UPDATE="https://wifi.choggiung.com/update.php"

source /etc/iglooportal # AUTHSRVR,CHECKOUT

# Read and clear client usage counters
clientUsage() {
        sudo iptables -nvx -Z -L acctO | grep -v "^       0 " | tail -n +3 | awk '{print $7,$2}'
        sudo iptables -nvx -Z -L acctI | grep -v "^       0 " | tail -n +3 | awk '{print $8,$2}'
}

# Sum usage by IP address
sumit() { # INPUT: ip bytes; OUTPUT: ip sumOfBytes
        # sort -n | awk '{t[$1]+=$2} END {for (i in t) {sum+=t[i]; printf "%-16s %10d\n",i,t[i]} printf "%-16s %10d\n","Grand Total: ",sum}'
        awk '{t[$1]+=$2} END {for (i in t) {printf "%-16s %10d\n",i,t[i]} }'
}

# Sum usage by user (loses mac address input in process)
sumuser() { # INPUT: usage.csv containing bytes,user, AND stdin containing bytes,user,mac; OUTPUT:sumOfBytesForEachUser,user,
	awk -F, '{t[$2]+=$1} END {for (i in t) {printf "%10d,%s,\n",t[i],i} }'
}

# Sum usage by mac, record user,host for each mac
summac() { # INPUT: usage.csv containing bytes,user,mac,host AND stdin containing bytes,user,mac,host; OUTPUT:sumOfBytesForEachMAC,user,mac,host
	awk -F, '{t[$3]+=$1;u[$3]=$2;h[$3]=$4;} END {for (i in t) {printf "%10d,%s,%s,%s\n",t[i],u[i],i,h[i]} }'
}

# Translate usage by IP to usage by user
bytesUsed() {
	clientUsage | sumit | while read ip bytes; do
		mac=$(arp -na | grep " ($ip) at " | awk '{print $4}')
		[ "$mac" = "<incomplete>" -o "$mac" = "" ] && continue
		user=$(iptables -t nat -L auth | grep -i "MAC $mac.*/* USER:" | sed -e 's/.* USER://g' -e 's/ \*\/$//g');
		#[ "$user" = "" ] && continue # Don't know which user to charge for these bytes
		host=$(grep -A10 "^lease $ip {" /var/lib/dhcp/dhcpd.leases | tail -n 11 | grep client-hostname | cut -d '"' -f 2)
		printf "%10s,%s,%s,%s\n" "$bytes" "$user" "$mac" "$host"
	done
}

main() {
	tzofs=$(date +%:z | sed -e 's/:/*3600+/g' -e 's/$/*60/g' | bc)
	[ "$CHECKOUT" = "" ] && { CHECKOUT=11; echo "WARNING: CHECKOUT defaulted to 11" 1>&2; }
	sinceCkout=$(date +"%s%%86400-($CHECKOUT*3600)+$tzofs" | bc) # Seconds since checkout time
	[ "$sinceCkout" = "" ] && echo "ERROR in sinceCkout calculation" 1>&2
	startdate=$(cat "$USAGE" | grep ",STARTDATE," | cut -d ',' -f 1)
	[ "$startdate" = "" ] && startdate=0
	age=$(date +"%s-$startdate" | bc)
	date +"%D %T: bytesused: startdate=$startdate,age=$age,sinceCkout=$sinceCkout,tzofs=$tzofs"
	if [ "$sinceCkout" -gt 0 -a "$age" -gt 86400 ]; then # IF after checkout time and statistics age > 24hrs, reset statistics
		echo "Resetting statistics."
		ckout=$(date +"%s-$sinceCkout" | bc) # Checkout time
		echo "$ckout,STARTDATE," >"$USAGE"
	fi

	echo "HOURLY USAGE:"
	mm=$(date +%M)
	[ "$mm" = "00" ] && rm -f "$USEHR" # Recycle this hour from a day ago.
	used=$(bytesUsed);
	([ -f "$USEHR" ] && cat "$USEHR"; echo "$used") | summac | tee "$USEHR.$$"
	mv -f "$USEHR.$$" "$USEHR"
	echo "DAILY USAGE:"
	([ -f "$USAGE" ] && cat "$USAGE"; echo "$used") | sumuser | tee "$USAGE.$$"
	mv -f "$USAGE.$$" "$USAGE"
}

updateChanged() {
	local user=$1
	local ob=$2
	local bytes=$3
	if [ "$ob" != "$bytes" ]; then
		userip=$(iptables -t nat -L auth | grep "/\* USER:$user \*/" | awk '{print $4}')
		echo "updateChanged: user=$user,ob=$ob,bytes=$bytes."
		echo "$bytes" >"$SESSIONS/bytes-$user.txt";
		session=$(find /var/lib/iglooportal/sessions/session-* -exec grep -H "^user=$user$" {} \; 2>/dev/null | head -n 1 | cut -d ':' -f 1)
		if [ "$session" != "" ]; then
			pass=$(grep "^pass=" "$session" | cut -d '=' -f 2)
			if [ "$pass" != "" ]; then
				result=$(curl --show-error --silent --insecure "$UPDATE?user=$user&pass=$pass&firewall=$name&fwip=$fwip&fwdns=$fwdns&bytes=$bytes&fwpass=&userip=$userip" | egrep -v "^NO$|^OK$")
				[ "$result" != "" ] && echo "$result" >"$FWPASS"
			fi
		fi
	fi
}

main >/dev/null
#name=$(ifconfig eth0 | grep HWaddr | awk '{print $5}' | sed -e 's/:/-/g') # Unique name from MAC address of this firewall
name=$(ifconfig eth0 | grep HWaddr | awk '{print $5}') # Unique name from MAC address of this firewall
fwip=$(ifconfig eth0 | grep "inet addr:" | awk '{print $2}' | sed -e 's/^addr://g')
fwdns=$(host "$fwip" | grep -v "not found:" | sed -e 's/.*domain name pointer //g')

# Iterate through users recorded in $USAGE
# Upload information for each user that changed since last time
cat "$USAGE" | while IFS=" ," read bytes user; do
	[ "$user" = "" -o "$user" = "STARTDATE" ] && continue
	ob=$(cat "$SESSIONS/bytes-$user.txt" 2>/dev/null)
	[ "$ob" = "" ] && ob=0
	ob=$(printf "%d" "$ob")
	updateChanged "$user" "$ob" "$bytes"
done
# Iterate through record of bytes used
# Two-way sync (also check for users that now have no bytes used)
find "$SESSIONS/bytes-"* | while read file; do
	user=$(basename "$file" .txt)
	user=$(echo "$user" | cut -d '-' -f 2-)
	ob=$(cat "$file")
	bytes=$(grep ",$user," "$USAGE" | cut -d ',' -f 1)
	bytes=$(printf "%d" "$bytes")
	[ "$bytes" = "" ] && bytes=0
	updateChanged "$user" "$ob" "$bytes"
done
fwpass=$(cat "$FWPASS" 2>/dev/null)
if [ "$fwpass" != "" ]; then # Ping the server to keep firewall alive
	curl --show-error --silent --insecure "$UPDATE?user=&pass=&firewall=$name&fwip=$fwip&fwdns=$fwdns&bytes=&fwpass=$fwpass"
fi

#ssh www-data@$AUTHSRVR mkdir -p "/var/lib/innproxy/users/$name"
#echo scp "$USEHR" "$USAGE" "www-data@$AUTHSRVR:/var/lib/innproxy/users/$name/"
#scp "$USEHR" "$USAGE" "www-data@$AUTHSRVR:/var/lib/innproxy/users/$name/"
